{"ast":null,"code":"import { ADD_FAVORITE, DELETE_FAVORITE, FILTER, ORDER } from '../redux/actions';\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAVORITE:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, payload],\n        allCharacters: [...allCharacters, payload]\n      };\n    case DELETE_FAVORITE:\n      // opción b:\n      // const filtered = state.myFavorites.filter((fav) => fav.id !== payload)\n      // y entonnces myFavorites: filtered\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(fav => fav.id !== payload)\n      };\n    case FILTER:\n      const copyAllCharactersFilter = [...state.allCharacters];\n      return {\n        ...state,\n        myFavorites: copyAllCharactersFilter.filter(element => element.gender === payload)\n      };\n    // return {\n    //     ...allCharacters,\n    //     myFavorites: state.filter((fav) => fav.gender !== action.payload)\n    // } \n    // myFavorites: [...state.myFavorites, action.payload]\n    case ORDER:\n      const copyAllCharactersOrder = [...state.allCharacters];\n      if (payload === \"Ascendente\") {\n        return {\n          ...state,\n          myFavorites: copyAllCharactersOrder.sort((elementA, elementB) => elementA.id - elementB.id)\n        };\n      } else if (payload === \"Descendente\") {\n        return {\n          ...state,\n          myFavorites: copyAllCharactersOrder.sort((elementA, elementB) => elementB.id - elementA.id)\n        };\n      } else {\n        break;\n      }\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAVORITE","DELETE_FAVORITE","FILTER","ORDER","initialState","myFavorites","allCharacters","rootReducer","state","type","payload","filter","fav","id","copyAllCharactersFilter","element","gender","copyAllCharactersOrder","sort","elementA","elementB"],"sources":["C:/Users/Inés/Desktop/Henry - M2/M2-Henry-10a/06-React-Intro/homework/02 - Integration/src/redux/reducer.js"],"sourcesContent":["import {ADD_FAVORITE, DELETE_FAVORITE, FILTER, ORDER} from '../redux/actions'\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: []\r\n};\r\n\r\nconst rootReducer = (state = initialState, {type, payload}) => {\r\n    switch (type) {\r\n        case ADD_FAVORITE:\r\n            return {\r\n                ...state,\r\n                myFavorites: [\r\n                    ...state.myFavorites,\r\n                    payload\r\n                ],\r\n                allCharacters: [...allCharacters, payload]\r\n            }      \r\n        case DELETE_FAVORITE:\r\n            // opción b:\r\n            // const filtered = state.myFavorites.filter((fav) => fav.id !== payload)\r\n            // y entonnces myFavorites: filtered\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter((fav) => fav.id !== payload)\r\n            }  \r\n        case FILTER:\r\n            const copyAllCharactersFilter = [...state.allCharacters];\r\n            return {\r\n              ...state,\r\n              myFavorites: copyAllCharactersFilter.filter(\r\n                (element) => element.gender === payload\r\n              ),\r\n            };\r\n            // return {\r\n            //     ...allCharacters,\r\n            //     myFavorites: state.filter((fav) => fav.gender !== action.payload)\r\n            // } \r\n            // myFavorites: [...state.myFavorites, action.payload]\r\n        case ORDER:\r\n            const copyAllCharactersOrder = [...state.allCharacters];\r\n            if (payload === \"Ascendente\") {\r\n              return {\r\n                ...state,\r\n                myFavorites: copyAllCharactersOrder.sort(\r\n                  (elementA, elementB) => elementA.id - elementB.id\r\n                ),\r\n              };\r\n            } else if (payload === \"Descendente\") {\r\n              return {\r\n                ...state,\r\n                myFavorites: copyAllCharactersOrder.sort(\r\n                  (elementA, elementB) => elementB.id - elementA.id\r\n                ),\r\n              };\r\n            } else {\r\n              break;\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAAQA,YAAY,EAAEC,eAAe,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;AAE7E,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAG,YAA2C;EAAA,IAA1CC,KAAK,uEAAGJ,YAAY;EAAA,IAAE;IAACK,IAAI;IAAEC;EAAO,CAAC;EACtD,QAAQD,IAAI;IACR,KAAKT,YAAY;MACb,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAE,CACT,GAAGG,KAAK,CAACH,WAAW,EACpBK,OAAO,CACV;QACDJ,aAAa,EAAE,CAAC,GAAGA,aAAa,EAAEI,OAAO;MAC7C,CAAC;IACL,KAAKT,eAAe;MAChB;MACA;MACA;MACA,OAAO;QACH,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACM,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKH,OAAO;MACrE,CAAC;IACL,KAAKR,MAAM;MACP,MAAMY,uBAAuB,GAAG,CAAC,GAAGN,KAAK,CAACF,aAAa,CAAC;MACxD,OAAO;QACL,GAAGE,KAAK;QACRH,WAAW,EAAES,uBAAuB,CAACH,MAAM,CACxCI,OAAO,IAAKA,OAAO,CAACC,MAAM,KAAKN,OAAO;MAE3C,CAAC;IACD;IACA;IACA;IACA;IACA;IACJ,KAAKP,KAAK;MACN,MAAMc,sBAAsB,GAAG,CAAC,GAAGT,KAAK,CAACF,aAAa,CAAC;MACvD,IAAII,OAAO,KAAK,YAAY,EAAE;QAC5B,OAAO;UACL,GAAGF,KAAK;UACRH,WAAW,EAAEY,sBAAsB,CAACC,IAAI,CACtC,CAACC,QAAQ,EAAEC,QAAQ,KAAKD,QAAQ,CAACN,EAAE,GAAGO,QAAQ,CAACP,EAAE;QAErD,CAAC;MACH,CAAC,MAAM,IAAIH,OAAO,KAAK,aAAa,EAAE;QACpC,OAAO;UACL,GAAGF,KAAK;UACRH,WAAW,EAAEY,sBAAsB,CAACC,IAAI,CACtC,CAACC,QAAQ,EAAEC,QAAQ,KAAKA,QAAQ,CAACP,EAAE,GAAGM,QAAQ,CAACN,EAAE;QAErD,CAAC;MACH,CAAC,MAAM;QACL;MACF;IACJ;MACI,OAAOL,KAAK;EAAC;AAEzB,CAAC;AAGD,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}