{"ast":null,"code":"export default function validation(inputs) {\n  let errors = {};\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n  const regexPassword = /^(?=.*?[a-z])(?=.*[0-9]).{6,10}$/;\n\n  // const regexPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\n  // --- Username ---\n  if (!inputs.username) errors.username = \"Por favor, complete este campo.\";else if (inputs.username.length > 35) errors.username = \"Nombre de usuario demaciado largo.\";else if (!regexEmail.test(inputs.username)) errors.username = \"El nombre de usuario deber ser un email valido.\";\n  // --- Password ---\n  if (!inputs.password) errors.password = \"Se requiere una password valida\";else if (inputs.password.length > 10) errors.password = \"La contraseña es demaciado larga.\";else if (inputs.password.length < 6) errors.password = \"La contraseña es demaciado corta.\";else if (!regexPassword.test(inputs.password)) errors.password = \"La contraseña debe tener almenos un numero.\";\n  return errors;\n}\n\n// const regexUsername = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n// const regexPassword = /^(?=.*?[a-z])(?=.*[0-9]).{6,10}$/;\n\n// export default function validation(userData) {\n//   let errors = {}\n\n//   if(!regexUsername.test(userData.username)) {\n//     userData.username = 'El nombre de usuario tiene que ser un mail.'}\n//   else if(!userData.username) errors.username = 'El nombre de usuario no puede estar vacío.'\n//   else if(userData.username.length > 35) {\n//     errors.username = 'El nombre de usuarion no puede tener más de 35 caracteres.'\n//   }\n//   if(!regexPassword.test(userData.password)) {\n//     errors.password = 'La contraseña tiene que tener al menos un número'\n//   }\n//   else if(userData.password.length < 6 && userData.password.length > 10) {\n//     errors.password = 'La contraseña tiene que tener una longitud entre 6 y 10 caracteres'\n//   }\n\n//   return (\n//         errors\n//     )\n// }","map":{"version":3,"names":["validation","inputs","errors","regexEmail","regexPassword","username","length","test","password"],"sources":["C:/Users/Inés/Desktop/Henry - M2/M2-Henry-10a/06-React-Intro/homework/02 - Integration/src/components/Form/Validation.js"],"sourcesContent":["\r\n\r\nexport default function validation (inputs){\r\n  let errors={};\r\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n  const regexPassword = /^(?=.*?[a-z])(?=.*[0-9]).{6,10}$/;\r\n  \r\n  // const regexPassword = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\n  // --- Username ---\r\n  if(!inputs.username) errors.username = \"Por favor, complete este campo.\";\r\n  else if(inputs.username.length > 35) errors.username = \"Nombre de usuario demaciado largo.\";\r\n  else if(!regexEmail.test(inputs.username)) errors.username = \"El nombre de usuario deber ser un email valido.\";\r\n  // --- Password ---\r\n  if(!inputs.password) errors.password = \"Se requiere una password valida\";\r\n  else if(inputs.password.length > 10) errors.password = \"La contraseña es demaciado larga.\";\r\n  else if(inputs.password.length < 6) errors.password = \"La contraseña es demaciado corta.\";\r\n  else if(!regexPassword.test(inputs.password)) errors.password = \"La contraseña debe tener almenos un numero.\";\r\n  \r\n  return errors;\r\n}\r\n\r\n\r\n// const regexUsername = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n// const regexPassword = /^(?=.*?[a-z])(?=.*[0-9]).{6,10}$/;\r\n\r\n// export default function validation(userData) {\r\n//   let errors = {}\r\n\r\n//   if(!regexUsername.test(userData.username)) {\r\n//     userData.username = 'El nombre de usuario tiene que ser un mail.'}\r\n//   else if(!userData.username) errors.username = 'El nombre de usuario no puede estar vacío.'\r\n//   else if(userData.username.length > 35) {\r\n//     errors.username = 'El nombre de usuarion no puede tener más de 35 caracteres.'\r\n//   }\r\n//   if(!regexPassword.test(userData.password)) {\r\n//     errors.password = 'La contraseña tiene que tener al menos un número'\r\n//   }\r\n//   else if(userData.password.length < 6 && userData.password.length > 10) {\r\n//     errors.password = 'La contraseña tiene que tener una longitud entre 6 y 10 caracteres'\r\n//   }\r\n\r\n//   return (\r\n//         errors\r\n//     )\r\n// }\r\n"],"mappings":"AAEA,eAAe,SAASA,UAAU,CAAEC,MAAM,EAAC;EACzC,IAAIC,MAAM,GAAC,CAAC,CAAC;EACb,MAAMC,UAAU,GAAG,2CAA2C;EAC9D,MAAMC,aAAa,GAAG,kCAAkC;;EAExD;EACA;EACA,IAAG,CAACH,MAAM,CAACI,QAAQ,EAAEH,MAAM,CAACG,QAAQ,GAAG,iCAAiC,CAAC,KACpE,IAAGJ,MAAM,CAACI,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAEJ,MAAM,CAACG,QAAQ,GAAG,oCAAoC,CAAC,KACvF,IAAG,CAACF,UAAU,CAACI,IAAI,CAACN,MAAM,CAACI,QAAQ,CAAC,EAAEH,MAAM,CAACG,QAAQ,GAAG,iDAAiD;EAC9G;EACA,IAAG,CAACJ,MAAM,CAACO,QAAQ,EAAEN,MAAM,CAACM,QAAQ,GAAG,iCAAiC,CAAC,KACpE,IAAGP,MAAM,CAACO,QAAQ,CAACF,MAAM,GAAG,EAAE,EAAEJ,MAAM,CAACM,QAAQ,GAAG,mCAAmC,CAAC,KACtF,IAAGP,MAAM,CAACO,QAAQ,CAACF,MAAM,GAAG,CAAC,EAAEJ,MAAM,CAACM,QAAQ,GAAG,mCAAmC,CAAC,KACrF,IAAG,CAACJ,aAAa,CAACG,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,EAAEN,MAAM,CAACM,QAAQ,GAAG,6CAA6C;EAE7G,OAAON,MAAM;AACf;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}